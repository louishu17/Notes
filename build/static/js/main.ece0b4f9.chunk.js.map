{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","baseUrl","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"8LAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACfC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACC,qBAAIC,UAAU,OAAd,UACEJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCExBK,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAgB,OAAZA,EACI,KAGD,qBAAKJ,UAAU,QAAf,SAAwBI,K,gBCN1BC,EAAU,aAiBD,EAfA,WAEd,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAa7B,EAVA,SAACC,GAEf,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ7B,EALA,SAACG,EAAIF,GAEnB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCVtCK,EAAS,WAMd,OACC,sBAAKC,MANc,CACnBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACC,uBACA,2GAuFYC,EAhFH,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEaF,mBAAS,IAFtB,mBAEVG,EAFU,KAEDC,EAFC,OAGaJ,oBAAS,GAHtB,mBAGVK,EAHU,KAGDC,EAHC,OAIuBN,mBAAS,MAJhC,mBAIVO,EAJU,KAIIC,EAJJ,KAMjBC,qBAAU,WACTC,IAAqBvB,MAAK,SAACwB,GAC1BT,EAASS,QAER,IAEH,IAsCMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAACtC,GAAD,OAAUA,EAAKG,aAElE,OACC,gCACC,uCACA,cAAC,EAAD,CAAcK,QAASwB,IACvB,8BACC,yBAAQ1B,QAAS,kBAAMyB,GAAYD,IAAnC,kBACOA,EAAU,YAAc,WAGhC,6BACEO,EAAYE,KAAI,SAACvC,GAAD,OAChB,cAAC,EAAD,CAECA,KAAMA,EACNC,iBAAkB,kBAxCI,SAACgB,GAC3B,IAAMjB,EAAO0B,EAAMc,MAAK,SAACC,GAAD,OAAOA,EAAExB,KAAOA,KAClCyB,EAAW,2BAAQ1C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDgC,EACSlB,EAAIyB,GACX9B,MAAK,SAAC+B,GACNhB,EAASD,EAAMa,KAAI,SAACvC,GAAD,OAAWA,EAAKiB,KAAOA,EAAKjB,EAAO2C,SAEtDC,OAAM,SAACC,GACPZ,EAAgB,SAAD,OACLjC,EAAKK,QADA,sCAGfyC,YAAW,WACVb,EAAgB,QACd,QAyBuBc,CAAmB/C,EAAKiB,MAF3CjB,EAAKiB,SAMb,uBAAM+B,SA1DQ,SAACC,GAChBA,EAAMC,iBACN,IAAMC,EAAa,CAClB9C,QAASuB,EACTwB,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,IAG5BrB,EAAmBgB,GAAYvC,MAAK,SAAC+B,GACpChB,EAASD,EAAM+B,OAAOd,IACtBd,EAAW,QAgDX,UACC,uBAAO6B,MAAO9B,EAAS+B,SA1BD,SAACV,GACzBW,QAAQC,IAAIZ,EAAMa,OAAOJ,OACzB7B,EAAWoB,EAAMa,OAAOJ,UAyBtB,wBAAQK,KAAK,SAAb,qBAGD,cAAC,EAAD,Q,MC3FHC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ece0b4f9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\tconst label = note.important ? 'make not important' : 'make important';\r\n\r\n\treturn (\r\n\t\t<li className='note'>\r\n\t\t\t{note.content}\r\n\t\t\t<button onClick={toggleImportance}>{label}</button>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Note;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n\tif (message === null) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn <div className='error'>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n\tconst request = axios.post(baseUrl, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n\tgetAll,\r\n\tcreate,\r\n\tupdate,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport Note from './components/Note';\r\nimport Notification from './components/Notification';\r\nimport noteService from './services/notes';\r\n\r\nconst Footer = () => {\r\n\tconst footerStyle = {\r\n\t\tcolor: 'green',\r\n\t\tfontStyle: 'italic',\r\n\t\tfontSize: 16,\r\n\t};\r\n\treturn (\r\n\t\t<div style={footerStyle}>\r\n\t\t\t<br />\r\n\t\t\t<em>\r\n\t\t\t\tNote app, Department of Computer Science, University of Helsinki 2021\r\n\t\t\t</em>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst App = () => {\r\n\tconst [notes, setNotes] = useState([]);\r\n\tconst [newNote, setNewNote] = useState('');\r\n\tconst [showAll, setShowAll] = useState(true);\r\n\tconst [errorMessage, setErrorMessage] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tnoteService.getAll().then((initialNotes) => {\r\n\t\t\tsetNotes(initialNotes);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst addNote = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst noteObject = {\r\n\t\t\tcontent: newNote,\r\n\t\t\tdate: new Date().toISOString(),\r\n\t\t\timportant: Math.random() > 0.5,\r\n\t\t};\r\n\r\n\t\tnoteService.create(noteObject).then((returnedNote) => {\r\n\t\t\tsetNotes(notes.concat(returnedNote));\r\n\t\t\tsetNewNote('');\r\n\t\t});\r\n\t};\r\n\r\n\tconst toggleImportanceOf = (id) => {\r\n\t\tconst note = notes.find((n) => n.id === id);\r\n\t\tconst changedNote = { ...note, important: !note.important };\r\n\r\n\t\tnoteService\r\n\t\t\t.update(id, changedNote)\r\n\t\t\t.then((returnedNote) => {\r\n\t\t\t\tsetNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetErrorMessage(\r\n\t\t\t\t\t`Note '${note.content}' was already removed from server`\r\n\t\t\t\t);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetErrorMessage(null);\r\n\t\t\t\t}, 5000);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleNoteChange = (event) => {\r\n\t\tconsole.log(event.target.value);\r\n\t\tsetNewNote(event.target.value);\r\n\t};\r\n\r\n\tconst notesToShow = showAll ? notes : notes.filter((note) => note.important);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Notes</h1>\r\n\t\t\t<Notification message={errorMessage} />\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={() => setShowAll(!showAll)}>\r\n\t\t\t\t\tshow {showAll ? 'important' : 'all'}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<ul>\r\n\t\t\t\t{notesToShow.map((note) => (\r\n\t\t\t\t\t<Note\r\n\t\t\t\t\t\tkey={note.id}\r\n\t\t\t\t\t\tnote={note}\r\n\t\t\t\t\t\ttoggleImportance={() => toggleImportanceOf(note.id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t\t<form onSubmit={addNote}>\r\n\t\t\t\t<input value={newNote} onChange={handleNoteChange} />\r\n\t\t\t\t<button type='submit'>save</button>\r\n\t\t\t</form>\r\n\r\n\t\t\t<Footer />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}